@page "/classes"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

@using Microsoft.AspNetCore.Authorization
@using Zeiterfassungssoftware.SharedData.Classes
@using Zeiterfassungssoftware.SharedData.ShouldTimes
@attribute [Authorize(Roles = "Administrator")]

<PageTitle>Classes</PageTitle>

@if(ClassSource.IsLoaded) {
    <div class="vertical-center">
        <div class="centered-div-flex">
            <div class="class-edit-page">
                    <div style="display:flex; justify-content: center; width: 100%;">
                        <div style="width: 100%;">
                            <div>
                                <select style="width: 100%;" @onchange="@SelectedClassChanged">
                                    @foreach(var Class in ClassSource.GetClasses()) {
                                        <option value="@Class.Id">@Class.Name</option>
                                    }
                                </select>
                            </div>

                            <p class="edit-category-title">Class name</p>
                            <TextField Class="textfield class-name-input" Multiline="false" PlaceHolder="Class name" @bind-Value="SelectedClass.Name" />
                            <br />
                            <p class="edit-category-title">Should times</p>
                            <div class="shouldtimes-body">
                                @foreach(var ShouldTime in SelectedClass.ShouldTimes)
                                {
                                    <div class="shouldtime">
                                        <button class="remove-shouldtime" @onclick="() => SelectedClass.ShouldTimes.Remove(ShouldTime)" >X</button>
                                        <div class="shouldtime-info">
                                            <select class="shouldtime-dayofweek-select" @bind="ShouldTime.DayOfWeek">
                                                @foreach (var Weekday in Enum.GetValues(typeof(DayOfWeek)))
                                                {
                                                    <option>@Weekday</option>
                                                }
                                            </select>
                                            <input type="time" value="@ShouldTime.Should.ToString()" @onchange="(e) => ShouldTime.Should = TimeSpan.Parse(e.Value as string ?? string.Empty)" />
                                        </div>
                                    </div>
                                }
                                <svg @onclick="() => SelectedClass.ShouldTimes.Add(new ShouldTime())" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16" style="@(SelectedClass.ShouldTimes.Any() ? "margin-bottom: 0; padding-bottom: 0; margin-top: 20px;" : "")">
                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                </svg>
                            </div>
                            <div>
                                @if(SelectedGuid.Equals(Guid.Empty)) {
                                    <Button Class="btn-primary classes-button-create" Text="Create" OnClick="SaveClass" />
                                }
                                else
                                {
                                    <Button Class="btn-primary classes-button" Text="Save" OnClick="SaveClass" />
                                    <Button Class="btn-primary classes-button" Text="Delete" OnClick="DeleteClass" />
                                }
                            </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>
} 
else
{
    <div class="vertical-center">
        <div class="centered-div-flex">
            <div class="loader">
                <div class="box box-1">
                    <div class="side-left"></div>
                    <div class="side-right"></div>
                    <div class="side-top"></div>
                </div>
                <div class="box box-2">
                    <div class="side-left"></div>
                    <div class="side-right"></div>
                    <div class="side-top"></div>
                </div>
                <div class="box box-3">
                    <div class="side-left"></div>
                    <div class="side-right"></div>
                    <div class="side-top"></div>
                </div>
                <div class="box box-4">
                    <div class="side-left"></div>
                    <div class="side-right"></div>
                    <div class="side-top"></div>
                </div>
            </div>
        </div>
    </div>
}